{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": ["react", "@typescript-eslint", "prettier", "mocha", "cypress"],
  "extends": [
    "airbnb",
    "plugin:react/recommended",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:cypress/recommended",
    "prettier/react",
    "prettier/@typescript-eslint",
    "plugin:import/typescript"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "modules": true,
      "impliedStrict": true,
      "experimentalObjectRestSpread": true
    }
  },
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts",".tsx"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "paths": ["./", "node_modules"]
      },
      "babel-module": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "alias": {
          "src": "./src",
          "__tests__": "./__tests__",
          "@types": "./@types",
          "Common": "./src/Components/Common",
          "stories": "./stories"
        }
      }
    }
  },
  "env": {
    "es6": true,
    "browser": true,
    "jest": true,
    "mocha": true,
    "node": true
  },
  "globals": {
    "cy": true
  },
  "rules": {
    "jest/expect-expect": "off", //cypress
    "prettier/prettier": ["error", {"singleQuote": true}],
    "import/no-unresolved": 0,
    "mocha/no-mocha-arrows": 0,
    "import/no-extraneous-dependencies": 0,
    "react/no-array-index-key": 0,
    "global-require": 0,
    "no-useless-escape": 0,
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "react/jsx-filename-extension": [
      1,
      { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/ban-ts-ignore": 0,
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-use-before-define": ["error", { "functions": false }],
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/camelcase": 0,
    "no-invalid-this": "off",
    "react/prop-types": 0,
    "react/forbid-prop-types": 0,
    "react/jsx-props-no-spreading": 0,
    "import/no-cycle": 0,
    "react/jsx-fragments": 0,
    "react/jsx-curly-brace-presence": 0,
    "jsx-a11y/label-has-associated-control": [ 2, {
      "labelComponents": ["CustomInputLabel"],
      "labelAttributes": ["label"],
      "controlComponents": ["CustomInput"],
      "depth": 3
    }],
    "no-console": 1,
  
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/label-has-for": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "mocha/no-setup-in-describe": 0,
    "no-else-return": 0,
    "allowDeclarations": 0,
    "spaced-comment": 0, /* allow css highlighting in template literal by switching this off */
    "import/no-named-as-default": 0, //  I prefer naming as default to imply main method.
    "import/no-named-as-default-member": 0
  }
}
